<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cc.dao.StudentMapper">

    <sql id="studentSelect">
         student.studentid,
         student.name,
         student.sex,
         student.age,
         student.phone,
         student.face,
         student.userid
</sql>

    <update id="updatebyStudentId">
        update  student
        <set>
            <if test="map.name!=null and map.name!=''">
                  `name`=#{map.name},
            </if>
            <if test="map.age!=null ">
                `age`=#{map.age},
            </if>
            <if test="map.sex!=null">
                `sex`=#{map.sex},
            </if>
            <if test="map.phone!=null and map.phone!=''">
                `phone`=#{map.phone},
            </if>
            <if test="map.face!=null and map.face!=''">
                `face`=#{map.face},
            </if>
            <if test="map.enable!=null ">
                `enable`=#{map.enable},
            </if>
        </set>
        where   studentId=#{map.studentId}
    </update>

    <update id="enablebyStudentId">
        update student set `enable`= #{enable}
        where   studentid in
        <foreach collection="list" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </update>

    <!--根据studentId批量查询-->
    <select id="queryByStudentId" resultType="Student">
        select
        <include refid="studentSelect"></include>
        from  student
        where  `enable`=0 and studentid in
        <foreach collection="list" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>

    <select id="querybyUserid" resultType="Student">
        select
        <include refid="studentSelect"></include>
         from student
        where
        userid=#{userid}
    </select>

    <resultMap id="studentList" type="Student">
        <id javaType="java.lang.String" jdbcType="VARCHAR" property="studentId" column="studentid"></id>
        <result javaType="java.lang.Integer" jdbcType="INTEGER" property="sex" column="sex"></result>
        <result javaType="java.lang.Integer" jdbcType="INTEGER" property="age" column="age"></result>
        <result javaType="java.lang.String" jdbcType="VARCHAR" property="name" column="name"></result>
        <result javaType="java.lang.String" jdbcType="VARCHAR" property="phone" column="phone"></result>
        <result javaType="java.lang.String" jdbcType="VARCHAR" property="face" column="face"></result>
        <result javaType="java.lang.String" jdbcType="VARCHAR" property="userid" column="userid"></result>
        <association property="user" javaType="User">
            <result javaType="java.lang.String" jdbcType="VARCHAR" property="userName" column="username"></result>
        </association>
    </resultMap>

    <!--分页查询学员列表，参数以map传入-->
    <select id="queryByParams"  resultMap="studentList">
        select
        users.username,
        <include refid="studentSelect"></include>
        from student
        inner  join  users on student.userid=users.userid
        <where>
            <if test="map.studentId!=null and map.studentId!=''">
            and  studentid=#{map.studentId}
            </if>
            <if test="map.name!=null and map.name!=''">
                and  name=#{map.name}
            </if>
            and student.enable=0 and  student.studentid<![CDATA[ <> ]]>'default'
        </where>
       limit #{map.currIndex} , #{map.pageSize}


    </select>
    <!--查询学员总数，参数以map传入-->
    <select id="queryCountByParams"  resultType="java.lang.Integer">
        select
        count(*)
        from student
        <where>
            <if test="map.studentId!=null and map.studentId!=''">
                and  studentid=#{map.studentId}
            </if>
            <if test="map.name!=null and map.name!=''">
                and  name=#{map.name}
            </if>
            and `enable`=0 and `studentid`!='default'
        </where>
    </select>

    <insert id="studentInsert" parameterType="Student">
        insert  into  student(`studentid`,`name`,`sex`,`age`,`phone`,`face`,`creator`,`creattime`,`userid`)
        values ( #{studentId}, #{name}, #{sex}, #{age}, #{phone}, #{face}, #{creator}, #{creattime},#{userid})
    </insert>

</mapper>